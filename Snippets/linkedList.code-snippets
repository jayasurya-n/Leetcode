{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	"Linked List Template": {
		"scope": "python",
		"prefix": "linkedList",
		"body": [
			"class Node:",
			"    def __init__(self, x):",
			"        self.val = x",
			"        self.next = None",
            "",
			"class LinkedList:",
			"    def __init__(self):",
			"        self.head = None",
			"",
			"    def append(self,newNode):",
			"        if(self.head==None):",
			"            self.head = newNode",
			"            return",
			"        mover = self.head",
			"        while(mover.next!=None):",
			"            mover = mover.next",
			"        mover.next = newNode",
			"",
			"    def printList(self,head):",
			"        print(\"Linked List:\",end=\"\")",
			"        while head:",
			"            print(head.val,end = \" \")",
			"            head = head.next",
			"        print()",
		 ],
		"description": "Linked List Template"
	}
}