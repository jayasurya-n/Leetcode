{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	"DSU Rank Template": {
		"scope": "python",
		"prefix": "dsu_rank",
		"body": [
			"class DisjointSet:",
			"    def __init__(self,n):",
			"        self.rank = [0]*(n+1)",
			"        self.parent = list(range(n+1))",
            "",
			"    def findUltimateParent(self,u):",
			"        if(u==self.parent[u]):return u",
			"        self.parent[u] = self.findUltimateParent(self.parent[u])",
			"        return self.parent[u]",
			"",
			"    def unionbyRank(self,u,v):",
			"        rootu = self.findUltimateParent(u)",
			"        rootv = self.findUltimateParent(v)",
			"        if(rootu==rootv):return",
			"",
			"        rank_u = self.rank[rootu]",
			"        rank_v = self.rank[rootv]",
			"",
			"        if(rank_u < rank_v):self.parent[rootu] = rootv",
			"        elif(rank_u > rank_v):self.parent[rootv] = rootu",
			"        else:",
			"            self.parent[rootv] = rootu",
			"            self.rank[rootu]+=1",
		 ],
		"description": "Union by Rank"
	}
}